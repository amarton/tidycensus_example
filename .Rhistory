# https://walker-data.com/tidycensus/
install(tidycensus)
# https://walker-data.com/tidycensus/
install.packages(tidycensus)
library(tidycensus)
# https://walker-data.com/tidycensus/
install.packages(tidycensus)
# https://walker-data.com/tidycensus/
install.packages("tidycensus")
library(tidycensus)
library(tidyverse)
# Define API Key
census_api_key("549950d36c22ff16455fe196bbbd01d63cfbe6cf")
acs_variables <- load_variables(2018, "acs5")
View(acs_variables)
zcta_black_pop <- get_acs(geography = "zcta", variables = "B02001_003", summary_var = "B02001_001", geometry = FALSE) %>%
mutate(moe_pct = moe/estimate*100) %>%
mutate(pct_black = (estimate/summary_est)*100)
View(zcta_black_pop)
# Get Median household income by zcta
zcta_median_household_income <- get_acs(geography = "zcta", variables = "B19013_001", geometry = FALSE) %>%
mutate(moe_pct = moe/estimate*100)
# https://walker-data.com/tidycensus/
install.packages("tidycensus")
library(tidycensus)
library(tidyverse)
# Get an api key
# https://api.census.gov/data/key_signup.html
# Define API Key
census_api_key("549950d36c22ff16455fe196bbbd01d63cfbe6cf")
# https://walker-data.com/tidycensus/reference/index.html
# load acs 2018 with five year average
acs_variables <- load_variables(2018, "acs5")
# Get the total Black population for each ZCTA
# Get acs https://walker-data.com/tidycensus/reference/get_acs.html
zcta_black_pop <- get_acs(geography = "zcta", variables = "B02001_003", summary_var = "B02001_001", geometry = FALSE) %>%
mutate(moe_pct = moe/estimate*100) %>%
mutate(pct_black = (estimate/summary_est)*100)
# Get Median household income by zcta
zcta_median_household_income <- get_acs(geography = "zcta", variables = "B19013_001", geometry = FALSE) %>%
mutate(moe_pct = moe/estimate*100)
View(acs_variables)
View(acs_variables)
View(zcta_median_household_income)
View(zcta_black_pop)
# Get the total Black population for each ZCTA
# Get acs https://walker-data.com/tidycensus/reference/get_acs.html
zcta_black_pop <- get_acs(geography = "zcta", state="Maryland", variables = "B02001_003", summary_var = "B02001_001", geometry = FALSE) %>%
mutate(moe_pct = moe/estimate*100) %>%
mutate(pct_black = (estimate/summary_est)*100)
# Get the total Black population for each ZCTA
# Get acs https://walker-data.com/tidycensus/reference/get_acs.html
zcta_black_pop <- get_acs(geography = "zcta", variables = "B02001_003", summary_var = "B02001_001", geometry = FALSE) %>%
mutate(moe_pct = moe/estimate*100) %>%
mutate(pct_black = (estimate/summary_est)*100)
# Get Median household income by zcta
zcta_median_household_income <- get_acs(geography = "zcta", variables = "B19013_001", geometry = FALSE) %>%
mutate(moe_pct = moe/estimate*100)
# https://walker-data.com/tidycensus/
install.packages("tidycensus")
library(tidycensus)
library(tidyverse)
# Get an api key
# https://api.census.gov/data/key_signup.html
# Define API Key
census_api_key("549950d36c22ff16455fe196bbbd01d63cfbe6cf")
# https://walker-data.com/tidycensus/reference/index.html
# load acs 2018 with five year average
acs_variables <- load_variables(2018, "acs5")
# https://walker-data.com/tidycensus/reference/index.html
# load acs 2018 with five year average
acs_variables <- load_variables(2018, "acs5")
# https://walker-data.com/tidycensus/reference/index.html
# load acs 2018 with five year average
acs_variables <- load_variables(2018, "acs5")
# https://walker-data.com/tidycensus/reference/index.html
# load acs 2018 with five year average
acs_variables <- load_variables(2018, "acs5")
# https://walker-data.com/tidycensus/reference/index.html
# load acs 2018 with five year average
acs_variables <- load_variables(2018, "acs5")
# Get the total Black population for each ZCTA
# Get acs https://walker-data.com/tidycensus/reference/get_acs.html
zcta_black_pop <- get_acs(geography = "zcta", variables = "B02001_003", summary_var = "B02001_001", geometry = FALSE) %>%
mutate(moe_pct = moe/estimate*100) %>%
mutate(pct_black = (estimate/summary_est)*100)
# Get Median household income by zcta
zcta_median_household_income <- get_acs(geography = "zcta", variables = "B19013_001", geometry = FALSE) %>%
mutate(moe_pct = moe/estimate*100)
# https://walker-data.com/tidycensus/reference/index.html
# load acs 2018 with five year average
acs_variables <- load_variables(2018, "acs5")
# https://walker-data.com/tidycensus/
library(tidycensus)
library(tidyverse)
# Get an api key
# https://api.census.gov/data/key_signup.html
# Define API Key
census_api_key("549950d36c22ff16455fe196bbbd01d63cfbe6cf")
# https://walker-data.com/tidycensus/reference/index.html
# load acs 2018 with five year average
acs_variables <- load_variables(2018, "acs5")
View(acs_variables)
# https://walker-data.com/tidycensus/reference/index.html
# load acs 2018 with five year average
acs_variables <- load_variables(2018, "acs5")
View(acs_variables)
# https://walker-data.com/tidycensus/
library(tidycensus)
library(tidyverse)
# Get an api key
# https://api.census.gov/data/key_signup.html
# Define API Key
census_api_key("549950d36c22ff16455fe196bbbd01d63cfbe6cf")
# https://walker-data.com/tidycensus/reference/index.html
# load acs 2018 with five year average
acs_variables <- load_variables(2018, "acs5")
# https://walker-data.com/tidycensus/reference/index.html
# load acs 2018 with five year average
acs_variables <- load_variables(2018, "acs5")
state_commute <- get_acs(geography = "state", variables = "B08303_001", geometry = FALSE)
View(state_commute)
# Get the estimate travel time to work less than 5 mins for each state, as percent of total
state_commute <- get_acs(geography = "state", variables = "	B08303_002", summary_var = "B02001_003", geometry = FALSE) %>%
mutate(pct_5mins = (estimate/summary_est)*100)
# https://walker-data.com/tidycensus/reference/index.html
# load acs 2018 with five year average
acs_variables <- load_variables(2018, "acs5")
# Get the estimate travel time to work less than 5 mins for each state, as percent of total
state_commute <- get_acs(geography = "state", variables = "	B08303_002", summary_var = "B02001_003", geometry = FALSE) %>%
mutate(pct_5mins = (estimate/summary_est)*100)
# Get the estimate travel time to work less than 5 mins for each state, as percent of total
state_commute <- get_acs(geography = "state", variables = "B08303_002", summary_var = "B02001_003", geometry = FALSE) %>%
mutate(pct_5mins = (estimate/summary_est)*100)
